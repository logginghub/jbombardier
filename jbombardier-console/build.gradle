/*
 * Copyright (c) 2009-2015 Vertex Labs Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
    }
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'

sourceCompatibility = 1.5
group = 'com.jbombardier'
version = '1.4.4-b2'

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

dependencies {

    compile project(':jbombardier-common')
    compile project(':jbombardier-agent')


//    compile 'com.jbombardier:jbombardier-common:1.4.4-b2'
//    compile 'com.jbombardier:jbombardier-agent:1.4.4-b2'

    compile 'com.logginghub:vl-logging:1.4.4'

    compile 'com.logginghub:vl-swing-utils:1.4.4'
    compile 'com.logginghub:vl-logging-frontend:1.4.4'
    compile 'com.logginghub:vl-analytics:1.4.4'

    compile 'com.logginghub:logginghub-utils:1.4.4-b2'

    compile 'org.apache.velocity:velocity:1.7'
    compile 'com.seaglasslookandfeel:seaglasslookandfeel:0.1.7.3'
    compile 'jfree:jfreechart:1.0.13'
    compile 'jfree:jcommon:1.0.15'

    compile 'org.slf4j:slf4j-api:1.6.1'

    compile 'org.apache.ant:ant:1.8.2'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.7'
    compile 'com.j256.simplejmx:simplejmx:1.9'

    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-all:1.3'

    testCompile 'org.mockito:mockito-all:1.9.5'
}

configurations {
    published
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    published sourceJar
    published javadocJar
}

bintray {
    user = 'jamesshaw5'
    key = '??'

    configurations = ['published', 'archives']

//    configurations = ['deployables'] //When uploading configuration files
    // - OR -
    // publications = ['mavenStuff'] //When uploading Maven-based publication files
    // - AND/OR -
//    filesSpec { //When uploading any arbitrary files ('filesSpec' is a standard Gradle CopySpec)
//        from 'arbitrary-files'
//        into 'standalone_files/level1'
//        rename '(.+)\\.(.+)', '$1-suffix.$2'
//    }
    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload
    pkg {
        repo = 'core'
        userOrg = 'logginghub'
        name = 'jbombardier'
        desc = 'JBombardier Common package'
        websiteUrl = 'https://github.com/logginghub/jbombardier'
        issueTrackerUrl = 'https://github.com/logginghub/jbombardier/issues'
        vcsUrl = 'https://github.com/https://github.com/logginghub/jbombardier.git'
        licenses = ['Apache-2.0']
        // labels = ['gear', 'gore', 'gorilla']
        publicDownloadNumbers = true
        // attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
        //Optional version descriptor

        version {
            name = '1.4.4-test' //Optional logical version name
            desc = 'optional, version-specific description'
            vcsTag = '1.4.4'
            //attributes= ['a': ['ay1', 'ay2', 'ay3'], 'b': ['bee'], c: 'cee']
        }

//        version {
//            name = '1.3-Final' //Bintray logical version name
//            desc = 'optional, version-specific description'
//            released  = 'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//            vcsTag = '1.3.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
//            }
//            mavenCentralSync {
//                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
//                user = 'userToken' //OSS user token
//                password = 'paasword' //OSS user password
//                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
//            }
//        }
    }
}