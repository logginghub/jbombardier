wrapper.successful_invocation_time=1
wrapper.max_failed_invocations=100000
wrapper.on_exit.default=RESTART
wrapper.restart.delay=0
wrapper.java.command=java
wrapper.java.command.loglevel=DEBUG
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp
wrapper.java.classpath.1=../lib/*
wrapper.java.library.path.1=../lib
wrapper.java.additional.auto_bits=TRUE
#wrapper.java.additional.1=
#wrapper.java.initmemory=3
wrapper.java.maxmemory=800
wrapper.app.parameter.1=com.jbombardier.agent.Agent2

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
#	wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=5

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
wrapper.ignore_sequence_gaps=TRUE
wrapper.console.title=Vertex Labs Performance Agent

#********************************************************************
# Wrapper JVM Checks
#********************************************************************



# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=1
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
wrapper.filter.action.1000=RESTART
wrapper.filter.message.1000=The JVM has run out of memory.

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
wrapper.name=VLPerformanceAgent
wrapper.displayname=Vertex Labs Performance Agent
wrapper.description=Vertex Labs Performance Agent
wrapper.ntservice.starttype=AUTO_START
wrapper.ntservice.interactive=false

